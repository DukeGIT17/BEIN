// <auto-generated />
using BEIN_DL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BEIN_API.Migrations
{
    [DbContext(typeof(BeinDbContext))]
    [Migration("20241208122217_SectorModification")]
    partial class SectorModification
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BEIN_DL.Models.CardInfo", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Header")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.Property<string>("Information")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("SectorInformationId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("SectorInformationId");

                    b.ToTable("CardInfo");
                });

            modelBuilder.Entity("BEIN_DL.Models.Feature", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)");

                    b.Property<string>("SoftwareProductId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("SoftwareProductId");

                    b.ToTable("Features");
                });

            modelBuilder.Entity("BEIN_DL.Models.Sector", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("Title")
                        .IsUnique();

                    b.ToTable("Sectors");
                });

            modelBuilder.Entity("BEIN_DL.Models.SectorInformation", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Header")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.Property<string>("SectorId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("SectorId")
                        .IsUnique();

                    b.ToTable("SectorInformation");
                });

            modelBuilder.Entity("BEIN_DL.Models.SectorPrinciple", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Principle")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SectorInformationId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("SectorInformationId");

                    b.ToTable("SectorPrinciple");
                });

            modelBuilder.Entity("BEIN_DL.Models.SectorProduct", b =>
                {
                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SectorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SectorTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId", "SectorId");

                    b.HasIndex("SectorId");

                    b.ToTable("SectorProduct");
                });

            modelBuilder.Entity("BEIN_DL.Models.SoftwareProduct", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(10000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Professions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectStage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("Review")
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vendor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Softwares", (string)null);
                });

            modelBuilder.Entity("BEIN_DL.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Profession")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("YearsOfExperience")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("PhoneNumber")
                        .IsUnique()
                        .HasFilter("[PhoneNumber] IS NOT NULL");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BEIN_DL.Models.Visit", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SoftwareProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "SoftwareProductId");

                    b.HasIndex("SoftwareProductId");

                    b.ToTable("Visits");
                });

            modelBuilder.Entity("BEIN_DL.Models.CardInfo", b =>
                {
                    b.HasOne("BEIN_DL.Models.SectorInformation", "SectorInformation")
                        .WithMany("CardInformation")
                        .HasForeignKey("SectorInformationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SectorInformation");
                });

            modelBuilder.Entity("BEIN_DL.Models.Feature", b =>
                {
                    b.HasOne("BEIN_DL.Models.SoftwareProduct", "SoftwareProduct")
                        .WithMany("Features")
                        .HasForeignKey("SoftwareProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SoftwareProduct");
                });

            modelBuilder.Entity("BEIN_DL.Models.SectorInformation", b =>
                {
                    b.HasOne("BEIN_DL.Models.Sector", "Sector")
                        .WithOne("SectorInformation")
                        .HasForeignKey("BEIN_DL.Models.SectorInformation", "SectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sector");
                });

            modelBuilder.Entity("BEIN_DL.Models.SectorPrinciple", b =>
                {
                    b.HasOne("BEIN_DL.Models.SectorInformation", "SectorInformation")
                        .WithMany("SectorPrinciples")
                        .HasForeignKey("SectorInformationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SectorInformation");
                });

            modelBuilder.Entity("BEIN_DL.Models.SectorProduct", b =>
                {
                    b.HasOne("BEIN_DL.Models.Sector", "Sector")
                        .WithMany("Products")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("BEIN_DL.Models.SoftwareProduct", "Product")
                        .WithMany("Sectors")
                        .HasForeignKey("SectorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Sector");
                });

            modelBuilder.Entity("BEIN_DL.Models.Visit", b =>
                {
                    b.HasOne("BEIN_DL.Models.SoftwareProduct", "Product")
                        .WithMany("Visits")
                        .HasForeignKey("SoftwareProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BEIN_DL.Models.User", "User")
                        .WithMany("Visits")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BEIN_DL.Models.Sector", b =>
                {
                    b.Navigation("Products");

                    b.Navigation("SectorInformation");
                });

            modelBuilder.Entity("BEIN_DL.Models.SectorInformation", b =>
                {
                    b.Navigation("CardInformation");

                    b.Navigation("SectorPrinciples");
                });

            modelBuilder.Entity("BEIN_DL.Models.SoftwareProduct", b =>
                {
                    b.Navigation("Features");

                    b.Navigation("Sectors");

                    b.Navigation("Visits");
                });

            modelBuilder.Entity("BEIN_DL.Models.User", b =>
                {
                    b.Navigation("Visits");
                });
#pragma warning restore 612, 618
        }
    }
}
